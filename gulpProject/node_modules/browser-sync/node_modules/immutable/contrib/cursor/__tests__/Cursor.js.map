{"version":3,"sources":["node_modules/browser-sync/node_modules/immutable/contrib/cursor/__tests__/Cursor.ts"],"names":[],"mappings":"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","file":"node_modules/browser-sync/node_modules/immutable/contrib/cursor/__tests__/Cursor.js","sourcesContent":["///<reference path='../../../resources/jest.d.ts'/>\n///<reference path='../../../dist/immutable.d.ts'/>\n///<reference path='../index.d.ts'/>\n\njest.autoMockOff();\n\nimport Immutable = require('immutable');\nimport Cursor = require('immutable/contrib/cursor');\n\njasmine.getEnv().addEqualityTester((a, b) =>\n  a instanceof Immutable.Iterable && b instanceof Immutable.Iterable ?\n    Immutable.is(a, b) :\n    jasmine.undefined\n);\n\ndescribe('Cursor', () => {\n\n  var json = { a: { b: { c: 1 } } };\n\n  it('gets from its path', () => {\n    var data = Immutable.fromJS(json);\n    var cursor = Cursor.from(data);\n\n    expect(cursor.deref()).toBe(data);\n\n    var deepCursor = cursor.cursor(['a', 'b']);\n    expect(deepCursor.deref().toJS()).toEqual(json.a.b);\n    expect(deepCursor.deref()).toBe(data.getIn(['a', 'b']));\n    expect(deepCursor.get('c')).toBe(1);\n\n    var leafCursor = deepCursor.cursor('c');\n    expect(leafCursor.deref()).toBe(1);\n\n    var missCursor = leafCursor.cursor('d');\n    expect(missCursor.deref()).toBe(undefined);\n  });\n\n  it('gets return new cursors', () => {\n    var data = Immutable.fromJS(json);\n    var cursor = Cursor.from(data);\n    var deepCursor = cursor.getIn(['a', 'b']);\n    expect(deepCursor.deref()).toBe(data.getIn(['a', 'b']));\n  });\n\n  it('gets return new cursors using List', () => {\n    var data = Immutable.fromJS(json);\n    var cursor = Cursor.from(data);\n    var deepCursor = cursor.getIn(Immutable.fromJS(['a', 'b']));\n    expect(deepCursor.deref()).toBe(data.getIn(Immutable.fromJS(['a', 'b'])));\n  });\n\n  it('cursor return new cursors of correct type', () => {\n    var data = Immutable.fromJS({ a: [1, 2, 3] });\n    var cursor = Cursor.from(data);\n    var deepCursor = <any>cursor.cursor('a');\n    expect(deepCursor.findIndex).toBeDefined();\n  });\n\n  it('can be treated as a value', () => {\n    var data = Immutable.fromJS(json);\n    var cursor = Cursor.from(data, ['a', 'b']);\n    expect(cursor.toJS()).toEqual(json.a.b);\n    expect(cursor).toEqual(data.getIn(['a', 'b']));\n    expect(cursor.size).toBe(1);\n    expect(cursor.get('c')).toBe(1);\n  });\n\n  it('can be value compared to a primitive', () => {\n    var data = Immutable.Map({ a: 'A' });\n    var aCursor = Cursor.from(data, 'a');\n    expect(aCursor.size).toBe(undefined);\n    expect(aCursor.deref()).toBe('A');\n    expect(Immutable.is(aCursor, 'A')).toBe(true);\n  });\n\n  it('updates at its path', () => {\n    var onChange = jest.genMockFunction();\n\n    var data = Immutable.fromJS(json);\n    var aCursor = Cursor.from(data, 'a', onChange);\n\n    var deepCursor = aCursor.cursor(['b', 'c']);\n    expect(deepCursor.deref()).toBe(1);\n\n    // cursor edits return new cursors:\n    var newDeepCursor = deepCursor.update(x => x + 1);\n    expect(newDeepCursor.deref()).toBe(2);\n    expect(onChange).lastCalledWith(\n      Immutable.fromJS({a:{b:{c:2}}}),\n      data,\n      ['a', 'b', 'c']\n    );\n\n    var newestDeepCursor = newDeepCursor.update(x => x + 1);\n    expect(newestDeepCursor.deref()).toBe(3);\n    expect(onChange).lastCalledWith(\n      Immutable.fromJS({a:{b:{c:3}}}),\n      Immutable.fromJS({a:{b:{c:2}}}),\n      ['a', 'b', 'c']\n    );\n\n    // meanwhile, data is still immutable:\n    expect(data.toJS()).toEqual(json);\n\n    // as is the original cursor.\n    expect(deepCursor.deref()).toBe(1);\n    var otherNewDeepCursor = deepCursor.update(x => x + 10);\n    expect(otherNewDeepCursor.deref()).toBe(11);\n    expect(onChange).lastCalledWith(\n      Immutable.fromJS({a:{b:{c:11}}}),\n      data,\n      ['a', 'b', 'c']\n    );\n\n    // and update has been called exactly thrice.\n    expect(onChange.mock.calls.length).toBe(3);\n  });\n\n  it('updates with the return value of onChange', () => {\n    var onChange = jest.genMockFunction();\n\n    var data = Immutable.fromJS(json);\n    var deepCursor = Cursor.from(data, ['a', 'b', 'c'], onChange);\n\n    onChange.mockReturnValueOnce(undefined);\n    // onChange returning undefined has no effect\n    var newCursor = deepCursor.update(x => x + 1);\n    expect(newCursor.deref()).toBe(2);\n    expect(onChange).lastCalledWith(\n      Immutable.fromJS({a:{b:{c:2}}}),\n      data,\n      ['a', 'b', 'c']\n    );\n\n    onChange.mockReturnValueOnce(Immutable.fromJS({a:{b:{c:11}}}));\n    // onChange returning something else has an effect\n    newCursor = newCursor.update(x => 999);\n    expect(newCursor.deref()).toBe(11);\n    expect(onChange).lastCalledWith(\n      Immutable.fromJS({a:{b:{c:999}}}),\n      Immutable.fromJS({a:{b:{c:2}}}),\n      ['a', 'b', 'c']\n    );\n\n    // and update has been called exactly twice\n    expect(onChange.mock.calls.length).toBe(2);\n  });\n\n  it('has map API for update shorthand', () => {\n    var onChange = jest.genMockFunction();\n\n    var data = Immutable.fromJS(json);\n    var aCursor = Cursor.from(data, 'a', onChange);\n    var bCursor = aCursor.cursor('b');\n    var cCursor = bCursor.cursor('c');\n\n    expect(bCursor.set('c', 10).deref()).toEqual(\n      Immutable.fromJS({ c: 10 })\n    );\n    expect(onChange).lastCalledWith(\n      Immutable.fromJS({ a: { b: { c: 10 } } }),\n      data,\n      ['a', 'b', 'c']\n    );\n  });\n\n  it('creates maps as necessary', () => {\n    var data = Immutable.Map();\n    var cursor = Cursor.from(data, ['a', 'b', 'c']);\n    expect(cursor.deref()).toBe(undefined);\n    cursor = cursor.set('d', 3);\n    expect(cursor.deref()).toEqual(Immutable.Map({d: 3}));\n  });\n\n  it('can set undefined', () => {\n    var data = Immutable.Map();\n    var cursor = Cursor.from(data, ['a', 'b', 'c']);\n    expect(cursor.deref()).toBe(undefined);\n    cursor = cursor.set('d', undefined);\n    expect(cursor.toJS()).toEqual({d: undefined});\n  });\n\n  it('has the sequence API', () => {\n    var data = Immutable.Map({a: 1, b: 2, c: 3});\n    var cursor = Cursor.from(data);\n    expect(cursor.map((x: number) => x * x)).toEqual(Immutable.Map({a: 1, b: 4, c: 9}));\n  });\n\n  it('can push values on a List', () => {\n    var onChange = jest.genMockFunction();\n    var data = Immutable.fromJS({a: {b: [0, 1, 2]}});\n    var cursor = Cursor.from(data, ['a', 'b'], onChange);\n\n    expect(cursor.push(3,4)).toEqual(Immutable.List([0, 1, 2, 3, 4]));\n    expect(onChange).lastCalledWith(\n      Immutable.fromJS({a: {b: [0, 1, 2, 3, 4]}}),\n      data,\n      ['a', 'b']\n    );\n  });\n\n  it('can pop values of a List', () => {\n    var onChange = jest.genMockFunction();\n    var data = Immutable.fromJS({a: {b: [0, 1, 2]}});\n    var cursor = Cursor.from(data, ['a', 'b'], onChange);\n\n    expect(cursor.pop()).toEqual(Immutable.List([0, 1]));\n    expect(onChange).lastCalledWith(\n      Immutable.fromJS({a: {b: [0, 1]}}),\n      data,\n      ['a', 'b']\n    );\n  });\n\n  it('can unshift values on a List', () => {\n    var onChange = jest.genMockFunction();\n    var data = Immutable.fromJS({a: {b: [0, 1, 2]}});\n    var cursor = Cursor.from(data, ['a', 'b'], onChange);\n\n    expect(cursor.unshift(-2, -1)).toEqual(Immutable.List([-2, -1, 0, 1, 2]));\n    expect(onChange).lastCalledWith(\n      Immutable.fromJS({a: {b: [-2, -1, 0, 1, 2]}}),\n      data,\n      ['a', 'b']\n    );\n  });\n\n  it('can shift values of a List', () => {\n    var onChange = jest.genMockFunction();\n    var data = Immutable.fromJS({a: {b: [0, 1, 2]}});\n    var cursor = Cursor.from(data, ['a', 'b'], onChange);\n\n    expect(cursor.shift()).toEqual(Immutable.List([1, 2]));\n    expect(onChange).lastCalledWith(\n      Immutable.fromJS({a: {b: [1, 2]}}),\n      data,\n      ['a', 'b']\n    );\n  });\n\n\n  it('returns wrapped values for sequence API', () => {\n    var data = Immutable.fromJS({a: {v: 1}, b: {v: 2}, c: {v: 3}});\n    var onChange = jest.genMockFunction();\n    var cursor = Cursor.from(data, onChange);\n\n    var found = cursor.find(map => map.get('v') === 2);\n    expect(typeof found.deref).toBe('function'); // is a cursor!\n    found = found.set('v', 20);\n    expect(onChange).lastCalledWith(\n      Immutable.fromJS({a: {v: 1}, b: {v: 20}, c: {v: 3}}),\n      data,\n      ['b', 'v']\n    );\n  });\n\n  it('returns wrapped values for iteration API', () => {\n    var jsData = [{val: 0}, {val: 1}, {val: 2}];\n    var data = Immutable.fromJS(jsData);\n    var cursor = Cursor.from(data);\n    cursor.forEach(function (c, i) {\n      expect(typeof c.deref).toBe('function'); // is a cursor!\n      expect(c.get('val')).toBe(i);\n    });\n  });\n\n  it('can map over values to get subcursors', () => {\n    var data = Immutable.fromJS({a: {v: 1}, b: {v: 2}, c: {v: 3}});\n    var cursor = Cursor.from(data);\n\n    var mapped = cursor.map(val => {\n      expect(typeof val.deref).toBe('function'); // mapped values are cursors.\n      return val;\n    }).toMap();\n    // Mapped is not a cursor, but it is a sequence of cursors.\n    expect(typeof (<any>mapped).deref).not.toBe('function');\n    expect(typeof (<any>mapped.get('a')).deref).toBe('function');\n\n    // Same for indexed cursors\n    var data2 = Immutable.fromJS({x: [{v: 1}, {v: 2}, {v: 3}]});\n    var cursor2 = Cursor.from(data2);\n\n    var mapped2 = cursor2.get('x').map(val => {\n      expect(typeof val.deref).toBe('function'); // mapped values are cursors.\n      return val;\n    }).toList();\n    // Mapped is not a cursor, but it is a sequence of cursors.\n    expect(typeof mapped2.deref).not.toBe('function');\n    expect(typeof mapped2.get(0).deref).toBe('function');\n  });\n\n  it('can have mutations apply with a single callback', () => {\n    var onChange = jest.genMockFunction();\n    var data = Immutable.fromJS({'a': 1});\n\n    var c1 = Cursor.from(data, onChange);\n    var c2 = c1.withMutations(m => m.set('b', 2).set('c', 3).set('d', 4));\n\n    expect(c1.deref().toObject()).toEqual({'a': 1});\n    expect(c2.deref().toObject()).toEqual({'a': 1, 'b': 2, 'c': 3, 'd': 4});\n    expect(onChange.mock.calls.length).toBe(1);\n  });\n\n  it('can use withMutations on an unfulfilled cursor', () => {\n    var onChange = jest.genMockFunction();\n    var data = Immutable.fromJS({});\n\n    var c1 = Cursor.from(data, ['a', 'b', 'c'], onChange);\n    var c2 = c1.withMutations(m => m.set('x', 1).set('y', 2).set('z', 3));\n\n    expect(c1.deref()).toEqual(undefined);\n    expect(c2.deref()).toEqual(Immutable.fromJS(\n      { x: 1, y: 2, z: 3 }\n    ));\n    expect(onChange.mock.calls.length).toBe(1);\n  });\n\n  it('maintains indexed sequences', () => {\n    var data = Immutable.fromJS([]);\n    var c = Cursor.from(data);\n    expect(c.toJS()).toEqual([]);\n  });\n\n  it('properly acts as an iterable', () => {\n    var data = Immutable.fromJS({key: {val: 1}});\n    var c = Cursor.from(data).values();\n    var c1 = c.next().value.get('val');\n    expect(c1).toBe(1);\n  });\n\n  it('can update deeply', () => {\n    var onChange = jest.genMockFunction();\n    var data = Immutable.fromJS({a:{b:{c:1}}});\n    var c = Cursor.from(data, ['a'], onChange);\n    var c1 = c.updateIn(['b', 'c'], x => x * 10);\n    expect(c1.getIn(['b', 'c'])).toBe(10);\n    expect(onChange).lastCalledWith(\n      Immutable.fromJS({a:{b:{c:10}}}),\n      data,\n      ['a', 'b', 'c']\n    );\n  });\n\n  it('can set deeply', () => {\n    var onChange = jest.genMockFunction();\n    var data = Immutable.fromJS({a:{b:{c:1}}});\n    var c = Cursor.from(data, ['a'], onChange);\n    var c1 = c.setIn(['b', 'c'], 10);\n    expect(c1.getIn(['b', 'c'])).toBe(10);\n    expect(onChange).lastCalledWith(\n      Immutable.fromJS({a:{b:{c:10}}}),\n      data,\n      ['a', 'b', 'c']\n    );\n  });\n\n  it('can get Record value as a property', () => {\n    var User = Immutable.Record({ name: 'John' });\n    var users = Immutable.List.of(new User());\n    var data = Immutable.Map({'users': users});\n    var cursor = Cursor.from(data, ['users']);\n    expect(cursor.first().name).toBe('John');\n  });\n\n  it('can set value of a cursor directly', () => {\n    var onChange = jest.genMockFunction();\n    var data = Immutable.fromJS({a:1});\n    var c = Cursor.from(data, ['a'], onChange);\n    var c1 = c.set(2);\n    expect(c1.deref()).toBe(2);\n    expect(onChange).lastCalledWith(\n      Immutable.fromJS({a:2}),\n      data,\n      ['a']\n    );\n  });\n\n  it('can set value of a cursor to undefined directly', () => {\n    var onChange = jest.genMockFunction();\n    var data = Immutable.fromJS({a:1});\n    var c = Cursor.from(data, ['a'], onChange);\n    var c1 = c.set(undefined);\n    expect(c1.deref()).toBe(undefined);\n    expect(onChange).lastCalledWith(\n      Immutable.fromJS({a:undefined}),\n      data,\n      ['a']\n    );\n  });\n\n});\n"],"sourceRoot":"/source/"}