{
  "name": "broker",
  "version": "1.0.1",
  "description": "Express/Connect middleware that serves local or remote static files",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "mocha test/ --reporter dot"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/divshot/broker.git"
  },
  "keywords": [
    "divshot",
    "superstatic",
    "send",
    "serve",
    "proxy"
  ],
  "author": {
    "name": "Divshot"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/divshot/broker/issues"
  },
  "homepage": "https://github.com/divshot/broker",
  "dependencies": {
    "deliver": "^1.1.0",
    "fast-url-parser": "^1.0.6-0",
    "file-exists": "^0.1.1",
    "mime-types": "^1.0.1"
  },
  "devDependencies": {
    "chai": "^1.9.1",
    "connect": "^3.0.2",
    "mkdirp": "^0.5.0",
    "mocha": "^1.20.1",
    "rmdir": "^1.0.4",
    "supertest": "^0.13.0"
  },
  "readme": "# broker\n\nExpress/Connect middleware that serves local or remote static files. \n\n## Install\n\n```\nnpm install broker --save\n```\n\n## Usage\n\nServe static files\n\n```js\nvar express = require('express');\nvar broker = require('broker');\n\nvar app = express();\n\napp.use(broker({\n  root: '/public'\n}));\n\napp.listen(3000, function () {\n\n});\n```\n\nProxy remote files\n\n```js\nvar express = require('express');\nvar broker = require('broker');\n\nvar app = express();\n\napp.use(broker({\n  root: 'http://proxyserver.com'\n}));\n\napp.listen(3000, function () {\n\n});\n```\n\n### broker([options])\n\n* **options** - the options are similar to the [send module](https://github.com/visionmedia/send#options) because it uses this to serve local static files. Here are a few:\n  * `root` - the root directory if serving local files or the url to prepend to requests to proxy remote static files\n  * `index` - a string or array of strings that define the directory index file\n  * `dotfiles` - how to handle files that begin with a dot. These are usually hidden files. The default value is ignore. Available options:\n    * `allow` - No special treatment for dotfiles\n    * `deny` - Send a 403 for any request for a dotfile\n    * `ignore` - Pretend like the dotfile does not exist and 404\n  \n\n\n\n## Run Tests\n\n```\nnpm install\nnpm test\n```\n",
  "readmeFilename": "README.md",
  "_id": "broker@1.0.1",
  "_from": "broker@1.0.1"
}
