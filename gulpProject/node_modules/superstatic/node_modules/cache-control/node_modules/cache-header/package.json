{
  "name": "cache-header",
  "version": "1.0.3",
  "description": "Get and set the response cache header",
  "main": "index.js",
  "scripts": {
    "test": "mocha test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/scottcorgan/cache-header.git"
  },
  "keywords": [
    "headers",
    "cache",
    "caching",
    "express",
    "connect"
  ],
  "author": {
    "name": "Scott Corgan"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/scottcorgan/cache-header/issues"
  },
  "homepage": "https://github.com/scottcorgan/cache-header",
  "dependencies": {
    "lodash.isnumber": "^2.4.1",
    "lodash.isstring": "^2.4.1",
    "regular": "^0.1.6"
  },
  "devDependencies": {
    "connect": "^3.2.0",
    "mocha": "^1.21.4",
    "supertest": "^0.13.0"
  },
  "readme": "# cache-header\n\nGet and set the response cache header\n\n## Install\n\n```\nnpm install cache-header --save\n```\n\n## Usage\n\n```js\nvar express = require('express');\nvar cacheHeader = require('cache-header');\n\nvar app = express();\n\napp.use(function (req, res, next) {\n  // Sets Cache-Control header to public, max-age=10000\n  cacheHeader(res, 10000);\n  next();\n});\n\napp.listen(3000, function () {\n  \n});\n```\n\n### cacheHeader(responseObject, headerValue)\n\n* `responseObject` - the response object passed through by Node\n* `headerValue` - value to set the header to. Can be the following types:\n  * `false` - sets value to `no-cache`\n  * `number` - a number or a parseable string. Sets header to `public, max-age={number}`\n  * `string` - sets the header to whatever the string is\n\n## Run Tests\n\n```\nnpm install\nnpm test\n```\n",
  "readmeFilename": "README.md",
  "_id": "cache-header@1.0.3",
  "_from": "cache-header@^1.0.0"
}
