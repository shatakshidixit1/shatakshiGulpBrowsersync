{
  "name": "not-found",
  "version": "1.0.1",
  "description": "Express/Connect middleware to serve a default not found/404 page",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "mocha test/ --reporter dot"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/divshot/not-found.git"
  },
  "keywords": [
    "divshot",
    "superstatic",
    "notfound",
    "404",
    "error"
  ],
  "author": {
    "name": "Divshot"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/divshot/not-found/issues"
  },
  "homepage": "https://github.com/divshot/not-found",
  "dependencies": {
    "deliver": "^1.1.0",
    "file-exists": "^0.1.1",
    "is-url": "^1.1.0"
  },
  "devDependencies": {
    "chai": "^1.9.1",
    "connect": "^3.0.2",
    "mkdirp": "^0.5.0",
    "mocha": "^1.20.1",
    "rmdir": "^1.0.4",
    "supertest": "^0.13.0",
    "mocksy": "^0.1.7"
  },
  "readme": "# not-found\n\nExpress/Connect middleware to serve a default not found/404 page.\n\n## Install\n\n```\nnpm install not-found --save\n```\n\n## Usage\n\nLocal file\n\n```js\nvar express = require('express');\nvar notFound = require('not-found');\n\nvar app = express();\n\napp.use(notFound(__dirname + '/not-found.html'));\n\napp.listen(3000, function () {\n\n});\n```\n\nRemote file\n\n```js\nvar express = require('express');\nvar notFound = require('not-found');\n\nvar app = express();\n\napp.use(notFound('http://domain.com/not-found.html'));\n\napp.listen(3000, function () {\n\n});\n```\n\n### notFound(file)\n\n* `file` - the path to the local file or a url for a remote file. This is required. It will skip the middleware if it is not provided or the file does not exists\n\n## Run Tests\n\n```\nnpm install\nnpm test\n```\n\n",
  "readmeFilename": "README.md",
  "_id": "not-found@1.0.1",
  "_from": "not-found@1.0.1"
}
