{
  "name": "pathetic",
  "version": "0.3.1",
  "description": "Get values by path-like keys",
  "main": "index.js",
  "scripts": {
    "test": "node_modules/.bin/mocha --runner spec test/index.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/scottcorgan/pathetic.git"
  },
  "keywords": [
    "path",
    "path-to-regexp",
    "express",
    "connect",
    "route"
  ],
  "author": {
    "name": "Scott Corgan"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/scottcorgan/pathetic/issues"
  },
  "devDependencies": {
    "mocha": "~1.17.1",
    "expect.js": "~0.2.0"
  },
  "dependencies": {
    "path-to-regexp": "0.1.x",
    "merge": "~1.1.2",
    "zip-object": "~0.1.0",
    "clone": "~0.1.11"
  },
  "readme": "# pathetic\n\nGet values by path-like keys\n\n## Install\n\n```\nnpm install pathetic --save\n```\n\n## Usage\n\n```js\nvar pathetic = require('pathetic');\nvar routes = pathetic({\n  '/path': {key: 'value'},\n  '/user/:id': function (req, res) {\n    res.end('GOT IT!')\n  }\n});\n\nvar p = routes('/path'); // OUTPUTS: {key: 'value'}\nvar userPath = routes('/user/123');\n\nuserPath(req, res);\nconsole.log(userPath.params().id == 123);\n```\n\n## API\n\n### pathetic(paths)\n\n* `paths` - a key/value object containing the paths as the keys and anything for the values. This returns a method that lets you query against the table with a path. This uses Express-like paths and breaks out the parameters for your as well.\n\n\n## Run Tests\n\n```\nnpm install\nnpm test\n```",
  "readmeFilename": "README.md",
  "_id": "pathetic@0.3.1",
  "_from": "pathetic@~0.3.1"
}
