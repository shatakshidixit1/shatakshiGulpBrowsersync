{
  "name": "redirects",
  "version": "1.1.1",
  "description": "Express/Connect middleware for segment-able url redirects",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "mocha test/ --reporter dot"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:divshot/redirects.git"
  },
  "keywords": [
    "superstatic",
    "redirects",
    "301",
    "static",
    "divshot"
  ],
  "author": {
    "name": "Divshot"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/divshot/redirects/issues"
  },
  "homepage": "https://github.com/divshot/redirects",
  "devDependencies": {
    "connect": "^3.3.3",
    "mocha": "^2.0.1",
    "supertest": "^0.15.0"
  },
  "dependencies": {
    "glob-slasher": "^1.0.0",
    "globject": "^1.0.0",
    "is-url": "^1.2.0",
    "lodash.isobject": "^3.0.0",
    "pathematics": "^0.1.1",
    "toxic": "^1.0.0"
  },
  "readme": "# redirects\n\nExpress/Connect middleware for segment-able url redirects\n\n## Install\n\n```\nnpm install redirects --save\n```\n\n## Usage\n\n```js\nvar http = require('http');\nvar connect = require('connect');\nvar redirects = require('redirects');\n\nvar app = connect();\n\napp.use(redirects({\n  '/some-url': '/redirected-url'  \n}));\n\nhttp.createServer(app).listen(3000, function (err) {\n  \n});\n```\n\n## Usage Options\n\n### Basic redirect\n\n```js\nvar connect = require('connect');\nvar redirects = require('redirects');\n\nvar app = connect();\n\napp.use(redirects({\n  '/some-url': '/redirected-url'  \n}));\n\nhttp.createServer(app).listen(3000, function (err) {\n  \n});\n```\n\n### Redirect with custom status code\n\n```js\nvar connect = require('connect');\nvar redirects = require('redirects');\n\nvar app = connect();\n\napp.use(redirects({\n  '/some-url': {\n    status: 302,\n    url: '/redirect-url'\n  }\n}));\n\nhttp.createServer(app).listen(3000, function (err) {\n  \n});\n```\n\n### Segmented value redirect\n\nAny value in the url that begins with a `:` will be considered a segment. This segment will replace the same value in the redirect url. This usage also works like the cusotm status codes example.\n\n```js\nvar connect = require('connect');\nvar redirects = require('redirects');\n\nvar app = connect();\n\napp.use(redirects({\n  // \"/old/test/path/here\" would redirect to \"/new/test/path/here\"\n  '/old/:value/path/:loc': '/new/:value/path/:loc'\n}));\n\nhttp.createServer(app).listen(3000, function (err) {\n  \n});\n```\n\n## Run Tests\n\n```\nnpm install\nnpm test\n```\n",
  "readmeFilename": "README.md",
  "_id": "redirects@1.1.1",
  "_from": "redirects@^1.1.0"
}
