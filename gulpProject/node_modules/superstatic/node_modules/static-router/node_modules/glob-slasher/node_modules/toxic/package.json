{
  "name": "toxic",
  "version": "1.0.0",
  "description": "Mutate keys and values in objects. Returns a new version of the object",
  "main": "index.js",
  "scripts": {
    "test": "node test.js | tap-spec"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/scottcorgan/toxic.git"
  },
  "keywords": [
    "globject",
    "glob",
    "minimatch",
    "map",
    "slash"
  ],
  "author": {
    "name": "Scott Corgan"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/scottcorgan/toxic/issues"
  },
  "homepage": "https://github.com/scottcorgan/toxic",
  "devDependencies": {
    "tap-spec": "^1.0.1",
    "tape": "^3.0.3"
  },
  "dependencies": {
    "lodash": "^2.4.1"
  },
  "readme": "# toxic\n\nMutate keys and values in objects. Returns a new version of the object\n\n## Install\n\n```\nnpm install toxic --save\n```\n\n## Usage\n\n```js\nvar toxic = require('toxic');\n\nvar mutatedObject = toxic({\n  key1: 'value1',\n  key2: 'value2'\n}, {\n  mutator: function (val) {\n    return val + '...'\n  }\n});\n\nconsole.log(mutatedObject);\n// OUTPUTS:\n// {\n//   'key1...': 'value1...',\n//   'key2...': 'value2...'\n// }\n```\n\n## API\n\n### toxic(object[, options])\n\n* `object` - The object to perform mutations on.\n* `options `\n  * `mutator` - Function that gets passed the current key or value. Default returns the value, as is.\n  * `keyMutator` - Function used ot mutate the keys. Overrides `mutator`.\n  * `valueMutator` - Function used ot mutate the values. Overrides `mutator`.\n\n## Run Tests\n\n```\nnpm install\nnpm test\n```\n",
  "readmeFilename": "README.md",
  "_id": "toxic@1.0.0",
  "_from": "toxic@^1.0.0"
}
