{
  "name": "van",
  "version": "0.0.4",
  "description": "All of your processes can pile into the van.",
  "main": "lib/index.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/divshot/van.git"
  },
  "keywords": [
    "processes",
    "interleaving",
    "command-line"
  ],
  "bin": {
    "van": "bin/van"
  },
  "author": {
    "name": "Michael Bleigh"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/divshot/van/issues"
  },
  "homepage": "https://github.com/divshot/van",
  "dependencies": {
    "chalk": "^0.4.0",
    "lodash": "^2.4.1"
  },
  "devDependencies": {
    "mocha": "~1.18.2",
    "chai": "^1.9.1"
  },
  "readme": "# Van: Simple Multi-Process Execution\n\n[![Code Climate](https://codeclimate.com/github/divshot/van.png)](https://codeclimate.com/github/divshot/van)\n\nVan is meant to provide simple multi-process execution for Node scripts.\n\n**Warning:** This library was created and intended for spinning up multiple\nprocesses on a local development environment. It isn't designed or intended\n(at least at this point) for any kind of production-server like usage. In\nother words, this is a dev utility not a [foreman](https://github.com/ddollar/foreman)\nreplacement.\n\n## Installation\n\n    npm install --save van\n\n## Interleave\n\nThe most common use case for Van is to run several processes at once and\ninterleave their output. Van also makes it easy to send termination signals\nto all of the child processes at once as well as know when all child processes\nhave exited. An example:\n\n```js\nvar Van = require(\"van\")\n\nvar van = new Van({\n  scripts: {\n    jekyll: 'bundle exec jekyll build --watch', \n    server: 'superstatic -p 4000'\n  }\n});\n\n// spawn the child processes and interleave output\nvan.start();\n\nprocess.on('SIGINT', function() {\n  // send a kill signal to each child process\n  van.stop();\n});\n```\n\n## Sequence\n\nYou may also wish to run a series of scripts in sequence, stopping execution\nif any of them exit with a non-zero code. Van makes this easy, too!\n\n```js\nvar van = new Van({\n  scripts: [\n    \"my/first/script\",\n    \"my/second/script\"\n  ]\n});\n\nvan.run();\n```\n\nBy calling `run()` instead of `start()` you are signaling that you wish to execute\nthe scripts sequentially.\n\n## Custom Configuration\n\nYou may need more sophisticated configuration than the `scripts` option provides.\nFor these cases, you can manually add new passengers to the van with some additional\nconfiguration options:\n\n```js\nvar van = new Van();\n\nvan.addPassenger('path/to/script', {cwd: '/working/dir'});\n\nvan.start(); // or .run();\n```\n\nThe available options are:\n\n* **cwd:** pass in a working directory you'd like the script to run in\n* **prefix:** when running in interleave mode, this will be the [prefix]\n* **color:** choose a console color for the prefix. Can be any color supported by [colors](https://github.com/Marak/colors.js)\n\n## License (MIT)\n\nCopyright (c) 2014 Divshot, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "van@0.0.4",
  "_from": "van@0.0.4"
}
